* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html {
	font-family: $body_font;
	// font-feature-settings: 'liga' 1, 'calt' 1;
	font-size: $base;
	line-height: 1.25;

	font-optical-sizing: auto;
	-webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
	scroll-behavior: smooth;

	&.noscroll {
    overflow: hidden;
  }
}

body {
	min-height: 100vh;

	font-size: $s0;
	font-weight: 400;
	// font-feature-settings: 'ss03' on;
	font-optical-sizing: auto;
	color: $noir;
	background-color: $blanc;

	@media (max-width: $mobile) {
    // font-size: $s-1;
  }

	// .background {
	// 	position: fixed;
	// 	top: 0;
	// 	left: 0;
	// 	width: 100vw;
	// 	height: 100lvh;
	// 	z-index: -1;
	// }
}

::selection {
  background: $accent;
	opacity: 1;
  color: $blanc;
}

h1, h2, h3, h4, h5, h6,
.h0, .h1, .h2, .h3, .h4, .h5, .h6 {
	display: block;
	font-family: $heading_font;
	// text-transform: uppercase;
	font-weight: 300;
	letter-spacing: -0.02em;
	line-height: 0.9;
	white-space: pre-line;

	&:not(.col) {
		max-width: 40ch;
	}

	strong {
		font-weight: 600;
		font-size: 0.89em;
		font-family: $body_font;
	}

	&.h--alt {
		font-family: $body_font;
		font-weight: normal;
		letter-spacing: -0.01em;
	}

	@media (max-width: $mobile) {
		line-height: 0.95;
	}
}

h1,
.h1 {
	font-size: $s7;
	line-height: 1;

	// &.h--alt {
	// 	letter-spacing: -0.01em;
	// }

	@media (max-width: $mobile) {
    font-size: $s4;
		line-height: 1.1;
  }
}

.h0 {
	font-size: $s8;
	line-height: 1;

	@media (max-width: $mobile) {
		font-size: $s5;
	}
}

h2,
.h2 {
	font-size: $s4;
	line-height: 1.1;

	@media (max-width: $mobile) {
    font-size: $s3;
  }
}

h3,
.h3 {
	font-size: $s3;
	line-height: 1.1;

	@media (max-width: $mobile) {
    font-size: $s2;
  }
}

h4,
.h4 {
	font-size: $s2;
	font-family: $body_font;
	line-height: 1.1;

	// @media (max-width: $mobile) {
  //   font-size: $s1;
  // }

	&:not(.col) {
		max-width: none;
	}
}

h5,
.h5 {
	font-size: $s1;
	font-family: $body_font;
	// font-weight: 600;
	line-height: 1.2;

	@media (max-width: $mobile) {
    // font-size: $s0;
  }

	&:not(.col) {
		max-width: none;
	}
}

h6,
.h6 {
	font-size: $s0;
	// font-family: $body_font;
	// text-transform: uppercase;
	line-height: 1.33333333;

	&:not(.col) {
		max-width: none;
	}
}

p {
	width: 100%;
	white-space: pre-line;

	@media (max-width: $mobile) {
		font-size: calc($s0 - 2px);
	}
	
	
	&:empty {
		display: none;
	}


	.mid &,
	blockquote & {
		font-size: $s1;

		@media (max-width: $mobile) {
			// font-size: calc($s1 - 2px);
			// line-height: 1.2;
		}
	}

	a:not(.button) {
		text-decoration: underline;
	}
}

blockquote {
	position: relative;
	font-style: normal;
	max-width: 66ch;
	padding: 0;
	margin: $s3 0;

	@media (max-width: $mobile) {
    padding-top: $s0;
		border-top: 1px solid;
  }

	@media (min-width: $mobile) {
		&:before {
			content: '';
			border-left: 1px solid;
			position: absolute;
			top: 0;
			left: calc($s1 * -1);
			height: 100%;
		}
	}
}

small,
.small {
	font-size: $s-1;

	&.sub,
	&.sup {
		font-size: calc($s-1 - 2px);
	}
}

a {
	color: currentColor;
	text-decoration: none;
	white-space: pre-line;

	// * {
	// 	pointer-events: none;
	// }
}

a:hover {
	text-decoration: none;
}

fieldset {
	border: none;
}

input,
select,
textarea,
button,
.button {
	appearance: none;
	font-size: inherit;
	color: inherit;
	font-family: $body_font;
	font-feature-settings: 'ss03' on;
	font-size: $s0;
	text-transform: inherit;
	// line-height: 1;
	border: none;
	color: currentColor;
	color: $blanc;
	background: $bleu;
	border-radius: $s2;
	padding: ($s-3) ($s0);

	&:disabled,
	&.disabled {
		pointer-events: none;
		opacity: 0.33;
	}
}

button,
.button {
	cursor: pointer;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	gap: $s-2;
	padding: calc($s-1 / 2) calc($s1) calc(($s-1 / 2) + 2px);
	transition: background-color 333ms, color 333ms;

	&.button--full {
		width: 100%;
		text-align: center;
	}

	.blanc &:not(.button--none),
	.bleu .blanc &:not(.button--none),
	.bleu-pale .blanc &:not(.button--none) {
		color: $noir;
		background: rgba($bleu, 0.1);

		&:hover,
		&:focus-visible {
			color: $blanc;
			background: $noir;
		}
	}

	.bleu &:not(.button--none),
	.bleu-pale &:not(.button--none) {
		color: $blanc;
		background: rgba($blanc, 0.25);

		&:hover,
		&:focus-visible {
			color: $noir;
			background: $blanc;
		}
	}

	.bleu &:not(.button--none) {
		color: $blanc;
		background: rgba($blanc, 0.25);
	}

	&.button--large {
		padding: ($s3) ($s2);
		border-radius: calc($radius * 6);
		font-size: $s3;

		@media (max-width: $tablet_portrait) {
			font-size: $s2;
		}

		.bleu & {
			background: $bleu-fonce;

			&:hover,
			&:focus-visible {
				color: $noir;
				background: $blanc;
			}
		}
	}

	&.button--dark {
		color: $blanc;
		background: $noir;
		border-color: transparent;
	}

	&.button--accent {
		color: $blanc;
		background: $accent;
		border-color: transparent;
	}

	&.button--grey {
		color: $noir;
		background: $grey;
		border-color: transparent;
	}

	&.button--muted {
		color: currentColor;
		background: $muted;
		border-color: transparent;

		&:hover,
		&:focus {
			color: $blanc;
			background: $noir;
		}
	}

	&.button--blanc {
		color: currentColor;
		background: rgba($blanc, 0.25);
		border-color: transparent;
	}

	&.button--underline {
		color: currentColor;
		background: transparent;
		border-color: transparent;
		border-radius: 0;
		border-bottom: 1px solid;
	}

	&:hover,
	&:focus {
		text-decoration: none;
		// background: $muted;
	}

	&.button--none {
		color: currentColor;
		background: transparent;
		padding: 0;
		border: none;
		border-radius: 0;
	}
}

label {
	cursor: pointer;
	font-family: $heading_font;
}

input,
select,
textarea {
	width: 100%;
	color: currentColor;
	font-family: $heading_font;
	background-color: $blanc;
	border: none;
	border-bottom: 1px solid;
	// border-radius: calc($radius / 2);
	border-radius: 0;
	padding: ($s-2) 0;

	&:focus {
		outline: 2px solid;
		outline-offset: 2px;
	}

	&::placeholder {
		color: currentColor;
	}
	// &:not(:placeholder-shown) {
	// 	padding: ($base * 0.75) $base ($base * 0.25);
	// }

	&.input--underline {
		color: currentColor;
		background: transparent;
		border-color: transparent;
		border-bottom: 1px solid $muted;
		border-radius: 0;
		padding: ($s-3) ($s0) ($s-3) 0;

		&::placeholder {
			color: $muted;
		}

		&:focus {
			border-bottom-color: currentColor;
		}
	}
}

textarea {
	display: block;
	height: $base * 10;
	resize: none;
}

input[type=radio],
input[type=checkbox] {
	cursor: pointer;
	appearance: none;
	width: auto;
	padding: ($base * 0.5);

	color: currentColor;
	background-color: transparent;
	outline: 2px solid;
	outline-offset: 2px;
	border: none;
	border-radius: 1px;

	&:checked {
		background-color: currentColor;
	}

	&.input--none {
		display: none;
	}
}

input[type=radio] {
	border-radius: 50%;
}

svg {
	fill: none;

	path,
	circle,
	rect {
		&:not([stroke]):not([fill]) {
			fill: currentColor;
		}
	}

	line {
		&:not([stroke]) {
			stroke: currentColor;
		}
	} 
}

ul,
ol {
	padding-left: 1em;
	
	&.list--nostyle {
		list-style: none;
		padding-left: 0;

		ul:not(.list--nostyle) {
			list-style: initial;
		}
	}
}

hr {
	color: currentColor;
	border: none;
	// background-color: currentColor;
	margin: $s0 0;
	// border-top: 1px dashed currentColor;
	background: currentColor;
	height: 1px;
	// background-image: repeating-linear-gradient(90deg, currentColor, currentColor 2px, transparent 2px, transparent 5px);

	.flex--column & {
		width: 100%;
	}
}

table {
	width: 100%;
	margin: $s2 0;
	-webkit-border-horizontal-spacing: 0;
	-webkit-border-vertical-spacing: 0;

	td,
	th {
		font-weight: normal;
		border-top: 1px solid var(--border-color, $muted);
		padding: 4px $s0;
		white-space: pre-line;
		width: calc(100% / var(--length));
		vertical-align: top;

		&:first-child {
			padding-left: 0;
		}
	}

	// th {
	// 	border-top: none;
	// 	text-align: left;
	// 	border-color: transparent;
	// 	font-weight: bold;
	// 	padding: ($s-1) 0 ($s-2);
	// }

	tr {
		&:last-child {
			td,
			th {
				border-bottom: 1px solid var(--border-color, $muted);
			}
		}
	}

	td {
		&:not(:first-child) {
			// border-left: 1px solid;
		}
	}

	&.table--inverse {
		td,
		th {
			border-top: none;
			border-bottom: 1px solid rgba($accent, 0.25);
		}
	}

	&.table--fixed {
		// table-layout: fixed;

		td,
		th {
			// padding-right: 10%;
		}
	}
}

details {
	
	summary {
		max-width: 100% !important;
		// cursor: pointer;

		&::-webkit-details-marker {
			display: none;
			content: "";
		}

    &::-moz-details-marker {
      display: none;
      content: "";
    }

    &::details-marker {
      display: none;
      content: "";
    }

    &::marker {
      display: none;
      content: "";
    }

    // iOS Safari specific fix
    list-style: none;
    list-style-type: none;
	}
}

figure,
picture,
img,
video {
	display: block;
	width: 100%;
}

strong,
.strong {
	font-weight: 700;
}

dialog {
	padding: 0;
	border: none;
	background: transparent;
	width: 100vw;
	height: 100vh;
	max-width: 100vw;
	max-height: 100vh;

	&[open] { 
		display: flex;
		align-items: center;
		justify-content: center;
	}

	&::backdrop {
		// background: rgba(0, 0, 0, 0.5);
		backdrop-filter: blur(10px);
	}
}


[id] {
	scroll-margin-top: $s2;
}



.sticky {
  position: sticky;
  top: $s0;
}

.padded {
  padding: $s0;

	@media (min-width: $tablet_landscape) {
		padding: $s2;
	}

	@media (max-width: $tablet_portrait) {
		padding: $s-2;
	}
}

	.padded--tight {
		padding: ($s-2) ($s-1);
	}

	.padded--thick {
		padding: ($s5) ($s5);

		@media (max-height: $mobile) {
			padding: ($s5) ($s5);
		}

		@media (max-width: $mobile) {
			padding: ($s2) ($s1);
		}
	}

// #GRID

.flex {
  width: 100%;
  display: flex;
	align-items: flex-start;
  flex-wrap: wrap;
  --gap: 0px;
  gap: var(--gap);

	&.flex--end {
		justify-content: flex-end;
	}

	&.flex--spaced {
		justify-content: space-between;
	}

	&.flex--center {
		justify-content: center;
	}

	&.flex--middle {
		align-items: center;
	}

	&.flex--bottom {
		align-items: flex-end;
	}

	&.flex--stretch {
		align-items: stretch;
	}

	&.flex--column {
		flex-direction: column;
	}

  &.flex--gapped {
    --gap: #{$s0};

    @media (max-width: $tablet_portrait) {
      // --gap: #{$s-1};
    }

		// hr {
		// 	margin: 0;
		// }
  }

  &.flex--thick_gapped {
    --gap: #{$s3};

		// hr {
		// 	margin: 0;
		// }
  }

  &.flex--tight_gapped {
    --gap: #{$s-1};

    @media (max-width: $mobile) {
      --gap: #{$s-2};
    }

		hr {
			margin: 0;
		}
  }

  &.flex--tight_guttered_on_phone {
    @media (max-width: $mobile) {
      --gap: #{$s-2};
    }
  }
}

  .col {
    @for $i from 1 through $number_of_columns { 
      &.col--#{$i}of#{$number_of_columns} {
        $width: math.div(100%, $number_of_columns) * $i;
        $adjust: calc(var(--gap) / #{math.div($number_of_columns, $i)});
        width: calc(#{$width} - var(--gap) + #{$adjust});
       }
		}

		@for $i from 1 through $number_of_columns {
			@media (max-width: $tablet_landscape) {
				&.col--landscape--#{$i}of#{$number_of_columns} {
					$width:  math.div(100%, $number_of_columns) * $i;
					$adjust: calc(var(--gap) / #{math.div($number_of_columns, $i)});
					width: calc(#{$width} - var(--gap) + #{$adjust});
				}
			}
    }

		@for $i from 1 through $number_of_columns {
			@media (max-width: $tablet_portrait) {
				&.col--portrait--#{$i}of#{$number_of_columns} {
					$width:  math.div(100%, $number_of_columns) * $i;
					$adjust: calc(var(--gap) / #{math.div($number_of_columns, $i)});
					width: calc(#{$width} - var(--gap) + #{$adjust});
				}
			}
    }

		@for $i from 1 through $number_of_columns {
			@media (max-width: $mobile) {
				&.col--mobile--#{$i}of#{$number_of_columns} {
					$width:  math.div(100%, $number_of_columns) * $i;
					$adjust: calc(var(--gap) / #{math.div($number_of_columns, $i)});
					width: calc(#{$width} - var(--gap) + #{$adjust}) !important;

					&:empty {
						display: none;
					}
				}
			}
    }

    @for $i from 1 through 3 { 
      &.col--#{$i}of#{3} {
        $width:  math.div(100%, 3) * $i;
        $adjust: calc(var(--gap) / #{math.div(3, $i)});
        width: calc(#{$width} - var(--gap) + #{$adjust});
       }
    }

		@for $i from 1 through 7 { 
      &.col--#{$i}of#{7} {
        $width:  math.div(100%, 7) * $i;
        $adjust: calc(var(--gap) / #{math.div(7, $i)});
        width: calc(#{$width} - var(--gap) + #{$adjust});
       }
    }
  }


@keyframes rotate {
  from {
    rotate: 0deg;
  }

  to {
    rotate: 360deg;
  }
}

.nobr {
	white-space: nowrap;
}

.beige {
	color: $noir;
	background-color: $beige;
}
.brun-fonce {
	color: $blanc;
	background-color: $brun-fonce;
}
.brun {
	color: $noir;
	background-color: $brun;
}
.gris-fonce {
	color: $blanc;
	background-color: $gris-fonce;
}
.gris {
	color: $noir;
	background-color: $gris;
}
.gris-pale {
	color: $noir;
	background-color: $gris-pale;
}
.bleu {
	color: $blanc;
	background-color: $bleu;

	hr {
		color: $bleu-pale;
	}
}
.bleu-pale {
	color: $blanc;
	background-color: $bleu-pale;
}
.vert {
	color: $blanc;
	background-color: $vert;
}
.noir {
	color: $blanc;
	background-color: $noir;
}
.blanc {
	color: $noir;
	background-color: $blanc;
}